paste0(c(1,3,5))
A = matrix(NA, nrow = N, ncol = 2284) // alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
A = matrix(NA, nrow = N, ncol = 2284) # alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 5000
A = matrix(NA, nrow = N, ncol = 2284) # alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
N <- 5
A = matrix(NA, nrow = N, ncol = 2284) # alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
rivi = sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27)) // satunnainen rivi
A[i,j,] = paste0(rivi)
}
# aikavaativuus on O(N x 2284 x 13) = O(N)
# jäljellä on selvittää kuinka monessa taulukon A[i,,] osa-taulukossa (2284 x 13 taulukossa) esiintyy sama rivi yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
// haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
N <- 5
A = matrix(NA, nrow = N, ncol = 2284) # alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi = sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j,] = paste0(rivi)
}
# aikavaativuus on O(N x 2284 x 13) = O(N)
# jäljellä on selvittää kuinka monessa taulukon A[i,,] osa-taulukossa (2284 x 13 taulukossa) esiintyy sama rivi yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
// haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 5
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi = sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j,] = paste0(rivi)
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 50
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi = sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j,] = paste0(rivi)
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 500
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi = sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j,] = paste0(rivi)
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 500
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi = sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] = paste0(rivi)
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 500
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste0(rivi)
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako = 0
for(i in 1:N)
montako += any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
N <- 500
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste0(rivi)
}
}
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste0(rivi)
}
}
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
rivi
paste0(rivi)
paste(rivi, collapse = "")
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 500
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste(rivi, collapse = "")
}
}
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 5
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste(rivi, collapse = "")
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako <- 0
for(i in 1:N)
montako = montako + any(table(A[i,] > 2))() # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 5
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste(rivi, collapse = "")
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako <- 0
for(i in 1:N)
montako = montako + any(table(A[i,] > 2)) # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
A
str(A)
table(A[1,])
any(table(A[1,])>2)
any(table(A[1,])>2) + 0
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 5
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
A[i,j] <- paste(rivi, collapse = "")
}
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako <- 0
for(i in 1:N)
montako = montako + any(table(A[i,]) > 2) # esintyyko sama rivi yli 2 kertaa
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
100 % 10
100 %% 10
100 %% 9
3 %% 2
# simuloidaan ensin havaittu aineisto (2284 riviä) N kertaa painotetuilla kotivoitto-todennäköisyyksillä
# alustetaan N x 2284 taulukko, jossa N on simulaation iteraatioiden lukumäärä, 2284 on simuloitavien rivien lukumäärä
N <- 5000
A = matrix(NA, nrow = N, ncol = 2284)
for(i in 1:N)  {# simulaatioiden lukumäärä
for(j in 1:2284) {# rivien lukumäärä
# satunnainen rivi
rivi <- sample(c("1","x","2"), replace = T, size = 13, prob = c(0.45, 0.28, 0.27))
rivi_string <-  paste(rivi, collapse = "") # rivi yhdeksi merkkijonoksi
A[i,j] <- rivi_string
}
if(i %% 100 == 0) print(paste("creating A, iter",i))
}
# jäljellä on selvittää kuinka monessa taulukon A[i,] rivissä  esiintyy sama rivi (merkkijono) yli 2 kertaa
montako <- 0
for(i in 1:N) {
montako = montako + any(table(A[i,]) > 2) # esintyyko sama rivi yli 2 kertaa
if(i %% 100 == 0) print(paste("finding duplicate rows, iter",i))
}
# haluttu frekvenssi (todennäköisyys) on siis nyt
montako / N
library(knitr)
knit(input = "readme.Rmd", output = "README.md")
setwd("C:/Users/Tuomo/Documents/GitHub/Vakio")
knit(input = "readme.Rmd", output = "README.md")
knit(input = "readme.Rmd", output = "README.md")
